{"version":3,"sources":["webpack:///./src/views/Bioassay.vue?2e4f","webpack:///src/views/Bioassay.vue","webpack:///./src/views/Bioassay.vue?8568","webpack:///./src/views/Bioassay.vue"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","name","data","aa","video","mediaRecorder","mounted","navigator","getUserMedia","init","methods","mediaDevices","uploadToPHPServer","formData","append","file","console","log","makeXMLHttpRequest","request","XMLHttpRequest","onreadystatechange","readyState","status","callback","open","url","send","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,iBAAiB,CAACH,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAQ,MAAM,OAAS,MAAM,GAAK,aAAaJ,EAAG,QAAQ,CAACI,MAAM,CAAC,KAAO,SAAS,KAAO,GAAG,MAAQ,KAAK,GAAK,cAAcJ,EAAG,QAAQ,CAACI,MAAM,CAAC,KAAO,SAAS,KAAO,GAAG,MAAQ,KAAK,GAAK,aAAaJ,EAAG,QAAQ,CAACI,MAAM,CAAC,KAAO,SAAS,KAAO,GAAG,MAAQ,SAAS,GAAK,e,yECQhb,YAEA,GACEC,KAAM,WACNC,KAFF,WAGI,MAAO,CACLC,GAAI,GACJC,MAAO,KACPC,cAAe,OAGnBC,QATF,WAUIC,UAAUC,aACd,wBACA,8BACA,0BACIhB,KAAKiB,QAEPC,QAAS,CACPD,KADJ,WACA,WACA,OACA,2CACMF,UAAUI,aAChB,gBACA,kBACQ,EAAR,sCAEQ,EAAR,kBACQ,EAAR,kCACU,EAAV,cAGQ,EAAR,uBACQ,EAAR,mCAIQ,EAAR,0CAOA,WACY,EAAZ,qBACY,EAAZ,UAIM,IAAN,+BAEQ,QAAR,aACQ,EAAR,yBAGM,IAAN,8BAEQ,QAAR,YACQ,EAAR,wBAGM,IAAN,4BACA,YACU,EAAV,MACU,EAAV,2BAIIC,kBAnDJ,SAmDA,GACM,IAAN,WACA,IACA,6DACA,CACQ,KAAR,cAGA,eACMC,EAASC,OAAO,iBAAkBC,EAAKd,MACvCY,EAASC,OAAO,aAAcC,GAC9BC,QAAQC,IAAIJ,GACZrB,KAAK0B,mBACX,4BACA,GACA,WACQ,IAAR,wBACQ,QAAR,yCAIIA,mBAxEJ,SAwEA,OACM,IAAIC,EAAU,IAAIC,eAClBD,EAAQE,mBAAqB,WACD,GAAtBF,EAAQG,YAAqC,KAAlBH,EAAQI,QACrCC,KAGJL,EAAQM,KAAK,OAAQC,GACrBP,EAAQQ,KAAKzB,MC3G+T,I,YCO9U0B,EAAY,eACd,EACAtC,EACAQ,GACA,EACA,KACA,KACA,MAIa,aAAA8B,E","file":"js/chunk-2d207ba3.b80eac2b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"bioassay-body\"},[_c('video',{attrs:{\"width\":\"640\",\"height\":\"480\",\"id\":\"myVideo\"}}),_c('input',{attrs:{\"type\":\"button\",\"name\":\"\",\"value\":\"开始\",\"id\":\"startBtn\"}}),_c('input',{attrs:{\"type\":\"button\",\"name\":\"\",\"value\":\"停止\",\"id\":\"stopBtn\"}}),_c('input',{attrs:{\"type\":\"button\",\"name\":\"\",\"value\":\"重新开始录像\",\"id\":\"ppBtn\"}})])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"bioassay-body\">\r\n    <video width=\"640\" height=\"480\" id=\"myVideo\"></video>\r\n    <input type=\"button\" name value=\"开始\" id=\"startBtn\" />\r\n    <input type=\"button\" name value=\"停止\" id=\"stopBtn\" />\r\n    <input type=\"button\" name value=\"重新开始录像\" id=\"ppBtn\" />\r\n  </div>\r\n</template>\r\n<script>\r\nconst MediaStreamRecorder = require(\"msr\");\r\nimport $ from 'jquery'\r\nexport default {\r\n  name: \"Bioassay\",\r\n  data() {\r\n    return {\r\n      aa: \"\",\r\n      video: null,\r\n      mediaRecorder: null\r\n    };\r\n  },\r\n  mounted() {\r\n    navigator.getUserMedia =\r\n      navigator.getUserMedia ||\r\n      navigator.webkitGetUserMedia ||\r\n      navigator.mozGetUserMedia;\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init() {\r\n      const _self = this;\r\n      let constraints = { audio: true, video: { width: 1280, height: 720 } };\r\n      navigator.mediaDevices\r\n        .getUserMedia(constraints)\r\n        .then(function(mediaStream) {\r\n          _self.video = document.querySelector(\"video\");\r\n          //  赋值 video 并开始播放\r\n          _self.video.srcObject = mediaStream;\r\n          _self.video.onloadedmetadata = function() {\r\n            _self.video.play();\r\n          };\r\n\r\n          _self.mediaRecorder = new MediaStreamRecorder(mediaStream);\r\n          _self.mediaRecorder.mimeType = \"video/mp4\";\r\n\r\n          //  停止录像以后的回调函数\r\n\r\n          _self.mediaRecorder.ondataavailable = blob => {\r\n              debugger\r\n            // POST/PUT \"Blob\" using FormData/XHR2\r\n            // var blobURL = URL.createObjectURL(blob);\r\n            // console.log(blob);\r\n            // document.write('<a href=\"' + blobURL + '\">' + blobURL + '</a>');\r\n            //  停止以后调用上传\r\n            if (_self.aa == \"\") {\r\n              _self.uploadToPHPServer(blob);\r\n              _self.aa = blob;\r\n            }\r\n          };\r\n        });\r\n         $(\"#startBtn\").click(() => {\r\n          //  开始录像\r\n          console.log('start');\r\n          this.mediaRecorder.start();\r\n        })\r\n\r\n        $(\"#stopBtn\").click(() => {\r\n          //  停止录像\r\n          console.log('stop');\r\n          this.mediaRecorder.stop();\r\n        })\r\n\r\n        $(\"#ppBtn\").click(() => {\r\n          if(this.aa !== \"\"){\r\n              this.aa = \"\";\r\n              this.mediaRecorder.start();\r\n            }\r\n        })\r\n    },\r\n    uploadToPHPServer(blob) {\r\n      let file = new File(\r\n        [blob],\r\n        \"msr-\" + new Date().toISOString().replace(/:|\\./g, \"-\") + \".webm\",\r\n        {\r\n          type: \"video/mp4\"\r\n        }\r\n      );\r\n      let formData = new FormData();\r\n      formData.append(\"video-filename\", file.name);\r\n      formData.append(\"video-blob\", file);\r\n      console.log(formData);\r\n      this.makeXMLHttpRequest(\r\n        \"https:/你的地址/data/save.php\",\r\n        formData,\r\n        function() {\r\n          let downloadURL = \"https://你的地址\" + file.name;\r\n          console.log(\"File uploaded to this path:\", downloadURL);\r\n        }\r\n      );\r\n    },\r\n    makeXMLHttpRequest(url, data, callback) {\r\n      var request = new XMLHttpRequest();\r\n      request.onreadystatechange = function() {\r\n        if (request.readyState == 4 && request.status == 200) {\r\n          callback();\r\n        }\r\n      };\r\n      request.open(\"POST\", url);\r\n      request.send(data);\r\n    }\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Bioassay.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Bioassay.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Bioassay.vue?vue&type=template&id=86442626&\"\nimport script from \"./Bioassay.vue?vue&type=script&lang=js&\"\nexport * from \"./Bioassay.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}